; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


[platformio]
#default_envs = uno
#default_envs = pro16MHzatmega328
default_envs = bluepill_f103c8


[env]
lib_extra_dirs = ../lib

lib_deps =
     libcanard
     o1heap

lib_deps_avr =
     # 1210
     CAN_BUS_Shield@1.20
     DallasTemperature@3.8.0


[env:bluepill_f103c8]
platform = ststm32@5.4.1
board = bluepill_f103c8
framework = arduino
#board_build.core = maple

# NOTE: We must use `lib_ldf_mode = off` because Platformio's LDF does not
#       evaluate C macros and it will suck-in all libraries it finds in *any*
#       source file.
#       But it's not usable for AVR because `SPI.h` is mysteriously missing
#       even when explicitly mentioned in `lib_deps`. A name clash probably.

lib_ldf_mode = off

build_flags =
     -D HAL_CAN_MODULE_ENABLED
     -D ENABLE_HWSERIAL3

lib_deps =
     ${env.lib_deps}

monitor_port = /dev/ttyUSB2
monitor_speed = 115200


[env:uno]
platform = atmelavr
board = uno
framework = arduino

build_flags =
     # 512 is an absolute minimum to keep NodeInfo working
     -D UAVCAN_MEM_POOL_SIZE=512

lib_deps =
     ${env.lib_deps}
     ${env.lib_deps_avr}

upload_port = /dev/ttyUSB3
upload_speed = 115200
monitor_port = /dev/ttyUSB3
monitor_speed = 115200


[env:pro16MHzatmega328]
platform = atmelavr
board = pro16MHzatmega328
framework = arduino

build_flags =
     -D UAVCAN_MEM_POOL_SIZE=512

lib_deps =
     ${env.lib_deps}
     ${env.lib_deps_avr}

upload_port = /dev/ttyUSB3
upload_speed = 115200
monitor_port = /dev/ttyUSB3
monitor_speed = 115200
